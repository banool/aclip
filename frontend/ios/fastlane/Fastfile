default_platform(:ios)

xcode_select "/Applications/Xcode.app"

platform :ios do
  desc “Upload screenshots”
  lane :screenshots do
    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 0,
      lock_when_sleeps: false
    )
    match(
      type: "appstore",
      readonly: is_ci,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      app_identifier: ["com.banool.aclip", "com.banool.aclip.aclipShareExtension"]
    )
    get_certificates
    get_provisioning_profile(app_identifier: "com.banool.aclip")
    get_provisioning_profile(app_identifier: "com.banool.aclip.aclipShareExtension")
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_options: {
        method: "app-store",
      }
    )
    upload_to_app_store(
      skip_binary_upload: true,
      screenshots_path: "../screenshots/ios",
      overwrite_screenshots: true,
    )
  end
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    create_keychain(
      name: ENV['MATCH_KEYCHAIN_NAME'],
      password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 0,
      lock_when_sleeps: false
    )
    match(
      type: "appstore",
      readonly: is_ci,
      keychain_name: ENV['MATCH_KEYCHAIN_NAME'],
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"],
      app_identifier: ["com.banool.aclip", "com.banool.aclip.aclipShareExtension"]
    )
    get_certificates
    get_provisioning_profile(app_identifier: "com.banool.aclip")
    get_provisioning_profile(app_identifier: "com.banool.aclip.aclipShareExtension")
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      export_options: {
        method: "app-store",
      }
    )
    upload_to_testflight
  end
end
