// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.78.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class NativePlatform extends FlutterRustBridgeBase<NativeWire>
    with FlutterRustBridgeSetupMixin {
  NativePlatform(FutureOr<WasmModule> dylib) : super(NativeWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<String> api2wire_StringList(List<String> raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_box_autoadd_options(Options raw) {
    return api2wire_options(raw);
  }

  @protected
  String? api2wire_opt_String(String? raw) {
    return raw == null ? null : api2wire_String(raw);
  }

  @protected
  List<String>? api2wire_opt_StringList(List<String>? raw) {
    return raw == null ? null : api2wire_StringList(raw);
  }

  @protected
  List<dynamic> api2wire_options(Options raw) {
    return [
      api2wire_bool(raw.noAudio),
      api2wire_opt_String(raw.baseUrl),
      api2wire_bool(raw.blacklistDomains),
      api2wire_bool(raw.noCss),
      api2wire_opt_String(raw.charset),
      api2wire_opt_StringList(raw.domains),
      api2wire_bool(raw.ignoreErrors),
      api2wire_bool(raw.noFrames),
      api2wire_bool(raw.noFonts),
      api2wire_bool(raw.noImages),
      api2wire_bool(raw.isolate),
      api2wire_bool(raw.noJs),
      api2wire_bool(raw.insecure),
      api2wire_bool(raw.noMetadata),
      api2wire_String(raw.output),
      api2wire_bool(raw.silent),
      api2wire_u64(raw.timeout),
      api2wire_opt_String(raw.userAgent),
      api2wire_bool(raw.noVideo),
      api2wire_String(raw.target),
      api2wire_bool(raw.noColor),
      api2wire_bool(raw.unwrapNoscript)
    ];
  }

  @protected
  Object api2wire_u64(int raw) {
    return castNativeBigInt(raw);
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }
// Section: finalizer
}

// Section: WASM wire module

@JS('wasm_bindgen')
external NativeWasmModule get wasmModule;

@JS()
@anonymous
class NativeWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external NativeWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* void */ wire_download_page(
      NativePortType port_, List<dynamic> options);

  external dynamic /* void */ wire_platform(NativePortType port_);

  external dynamic /* void */ wire_rust_release_mode(NativePortType port_);
}

// Section: WASM wire connector

class NativeWire extends FlutterRustBridgeWasmWireBase<NativeWasmModule> {
  NativeWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<NativeWasmModule>(module));

  void wire_download_page(NativePortType port_, List<dynamic> options) =>
      wasmModule.wire_download_page(port_, options);

  void wire_platform(NativePortType port_) => wasmModule.wire_platform(port_);

  void wire_rust_release_mode(NativePortType port_) =>
      wasmModule.wire_rust_release_mode(port_);
}
